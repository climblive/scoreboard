import org.apache.tools.ant.taskdefs.condition.Os


buildscript {
    ext.kotlin_version = '1.3.10' // Required for Kotlin integration
    ext.spring_boot_version = '2.1.0.RELEASE'

    ext.password= project.hasProperty('password') ? project.getProperty('password') : 'default'
    ext.username = project.hasProperty('username') ? project.getProperty('username') : 'default'

    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version" // Required for Kotlin integration
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version" // See https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "com.bmuschko:gradle-cargo-plugin:2.2.3"
        classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0"

    }
}

apply plugin: 'kotlin' // Required for Kotlin integration
apply plugin: "kotlin-spring" // https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support
apply plugin: 'kotlin-jpa'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'com.bmuschko.cargo'
apply plugin: 'com.palantir.docker'

group = 'jespersolver'


task web(type:Exec) {
    workingDir '../web'

    //on windows:
    if(System.out.println(Os.isFamily(Os.FAMILY_WINDOWS))) {
        commandLine 'cmd', '/c', 'npm'
    } else {
        commandLine 'npm'
    }

    args 'run', 'build'
}

bootJar {
    dependsOn web

    baseName = 'scoreboard'
    version = '0.1.0'

    from('../web/build') {
        into 'public'
    }
}

task unpack(type: Copy) {
    dependsOn bootJar
    from(zipTree(tasks.bootJar.outputs.files.singleFile))
    into("build/dependency")
}

docker {
    name "${project.group}/${bootJar.baseName}"
    copySpec.from(tasks.unpack.outputs).into("dependency")
    buildArgs(['DEPENDENCY': "dependency"])
}

war {
    dependsOn web

    enabled = true
    //baseName = 'bombardier'
    //version =  '0.1'
    webAppDirName = '../web/build'

    // adds a file-set to the WEB-INF dir.
    webInf { from 'src/webInf' }
}

cargo {

    containerId = 'tomcat7x'
    port=9099

    deployable {
        context = 'mixnmatch'
    }

    remote {
        hostname = 'localhost'
    }

    remote.username = username
    remote.password = password

    System.out.println("Deploying with username " + remote.username + " and password " + remote.password)
}

repositories {
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version" // Required for Kotlin integration
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-websocket"
    implementation "com.google.code.gson:gson:2.8.5"
    implementation "io.springfox:springfox-swagger2:2.9.2"
    implementation "io.springfox:springfox-swagger-ui:2.9.2"
    implementation "org.hibernate:hibernate-core:5.3.7.Final"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    implementation "org.apache.poi:poi:3.17"
    implementation "org.apache.pdfbox:pdfbox:2.0.13"
    implementation "com.google.zxing:core:3.3.0"
    implementation 'com.google.zxing:javase:3.3.0'

    implementation "net.logstash.logback:logstash-logback-encoder:5.3"
    implementation "ch.qos.logback:logback-classic:1.2.3"

    runtimeOnly "mysql:mysql-connector-java"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.hibernate:hibernate-testing:5.3.7.Final"
    testImplementation "com.h2database:h2:1.4.196"
}
